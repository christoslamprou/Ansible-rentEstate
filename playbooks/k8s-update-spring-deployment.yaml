- name: Update Kubernetes Deployment Image (rentestate)
  hosts: appservers
  become: yes
  gather_facts: no   # Δουλεύουμε με Kubernetes API

  vars:
    kubeconfig: "/home/azureuser/.kube/config"  # Path στο kubeconfig για auth
    namespace: "rentestate"                     # Namespace όπου τρέχει η εφαρμογή
    deployment_name: "rentestate-app"           # Το όνομα του Deployment
    container_name: "app"                       # Container name μέσα στο Pod spec
    new_image: "ghcr.io/skk137/rentestate2:latest" # Νέα Docker image που θα γίνει deploy
    selector_label: "app=rentestate-app"        # Label selector για pods

  pre_tasks:
    # Βεβαιώνεται ότι υπάρχουν Python και pip τα οποία είναι απαραίτητα για Kubernetes modules
    - name: Ensure Python and pip are installed
      apt:
        name:
          - python3-pip
          - python3-venv
        state: present
        update_cache: yes

    # Εγκαθιστά Python dependencies για Kubernetes και OpenShift modules
    - name: Install required Python deps for Kubernetes
      apt:
        name:
          - python3-kubernetes
          - python3-openshift
        state: present

  tasks:
    # Δείχνει το τρέχον image πριν την αλλαγή
    - name: Show current image (before)
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        kind: Deployment
        namespace: "{{ namespace }}"
        name: "{{ deployment_name }}"
      register: dep_before

    # Κάνει patch το Deployment ώστε να χρησιμοποιεί το νέο image
    - name: Update the deployment image
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ kubeconfig }}"
        namespace: "{{ namespace }}"
        kind: Deployment
        name: "{{ deployment_name }}"
        definition:
          spec:
            template:
              spec:
                containers:
                  - name: "{{ container_name }}"
                    image: "{{ new_image }}"

    # Περιμένει μέχρι να ολοκληρωθεί το rolling update για όλα τα replicas διαθέσιμα
    - name: Poll deployment status until all replicas are available
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        api_version: apps/v1
        kind: Deployment
        namespace: "{{ namespace }}"
        name: "{{ deployment_name }}"
      register: dep_status
      until: >
        (dep_status.resources | length) > 0 and
        (dep_status.resources[0].status.availableReplicas | default(0)) ==
        (dep_status.resources[0].spec.replicas | default(0))
      retries: 60   # Μέχρι 6 λεπτά retry
      delay: 6      # Κάθε 6 δευτερόλεπτα

    # Παίρνει τα Pods αυτού του Deployment
    - name: Get pods of this deployment
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        kind: Pod
        namespace: "{{ namespace }}"
        label_selectors:
          - "{{ selector_label }}"
      register: pod_list

    # Συλλέγει τα images των containers που τρέχουν αυτή τη στιγμή
    - name: Collect images of target container from running pods
      set_fact:
        container_images: "{{ pod_list.resources | json_query(query) | list }}"
      vars:
        query: "[?status.phase=='Running'].spec.containers[?name=='{{ container_name }}'].image[]"

    # Αν υπάρχει pod που δεν τρέχει με το νέο image → αποτυγχάνει το playbook
    - name: Fail if any running pod is NOT using the new image
      fail:
        msg: >-
          One or more pods do not run the expected image {{ new_image }}.
          Found images: {{ (container_images | unique) | join(', ') }}
      when: >
        ((container_images | unique) | difference([new_image])) | length > 0

    # Εμφανίζει ανακεφαλαίωση στο τέλος
    - name: Summary
      debug:
        msg:
          - "Updated deployment: {{ deployment_name }}"
          - "Container: {{ container_name }}"
          - "New image: {{ new_image }}"
          - "Pods using image: {{ (container_images | unique) | join(', ') }}"